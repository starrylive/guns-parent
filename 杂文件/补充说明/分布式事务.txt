就目前来说，用过的分布式事务解决方案有两种
1. 学成在线的最终一致性(性能高，但有数据不一致的风险)，适合不是那么紧急的场景，如转账    属于两阶段提交
2. 本章将要学到的tcc编程,所谓的TCC编程模式，也是两阶段提交的一个变种。   属于两阶段
    TCC提供了一个编程框架，将整个业务逻辑分为三块：Try、Confirm和Cancel三个操作。
    以在线下单为例，Try阶段会去扣库存，Confirm阶段则是去更新订单状态，如果更新订单失败，则进入Cancel阶段，会去恢复库存。
    总之，TCC就是通过代码人为实现了两阶段提交，不同的业务场景所写的代码都不一样，复杂度也不一样，因此，这种模式并不能很好地被复用。

两种事务比较:
    基于消息事务是强一致性事务，会存在资源浪费(比如定时任务扫描?)
    tcc事务是柔性事务，在try阶段要对资源做预留
    tcc事务在确认或取消阶段释放资源
    与基于消息事务对比，tcc的时效性更好



分布式框架：
    GTS（听说19年开源了社区版）
    DTX（蚂蚁金服的，收费）
    TCC-Transction（开源，本课程学习）
    ByteTCC（开源，后期之秀）